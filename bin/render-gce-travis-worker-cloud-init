#!/usr/bin/env bash

set -o errexit

usage() {
  cat <<EOF
Usage: $(basename $0) <template-file> <cloud-init-file>

Uses sed to "render" a "template".  Wow.

An environment variable file matching the basename of the cloud init file must
be present in the "envs" directory as well as the
\$TRAVIS_WORKER_GOOGLE_CREDENTIALS var.
EOF
}

case $1 in
  -h|--help)
    usage
    exit 0
    ;;
esac

if [ $# -lt 2 ] ; then
  usage
  exit 1
fi

TEMPLATE_FILE=$1
shift
CLOUD_INIT_FILE=$1
shift

: ${ENV_FILE:=envs/$(basename ${CLOUD_INIT_FILE}).env}
: ${NODE_FILE:=nodes/$(basename ${CLOUD_INIT_FILE}).json}

if [ ! -f ${ENV_FILE} ] ; then
  echo Missing ${ENV_FILE} file >&2
  exit 1
fi

if [ ! -f ${NODE_FILE} ] ; then
  echo Missing ${NODE_FILE} file >&2
  exit 1
fi

if [[ "x${TRAVIS_WORKER_GOOGLE_CREDENTIALS}" = "x" ]] ; then
  echo Missing \$TRAVIS_WORKER_GOOGLE_CREDENTIALS file >&2
  exit 1
fi

trap 'rm -f tmp.gce.json' EXIT QUIT INT TERM
cat > tmp.gce.json <<EOF
$TRAVIS_WORKER_GOOGLE_CREDENTIALS
EOF

sed \
  -e "/___ENV___/r ${ENV_FILE}" \
  -e "/___ENV___/d" \
  -e "/___NODE_JSON___/r ${NODE_FILE}" \
  -e "/___NODE_JSON___/d" \
  -e "/___GCE_JSON___/r tmp.gce.json" \
  -e "/___GCE_JSON___/d" \
  < "$TEMPLATE_FILE"
