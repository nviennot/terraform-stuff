#!/usr/bin/env bash

main() {
  export DEBIAN_FRONTEND='noninteractive'

  set -o errexit
  set -o xtrace
  shopt -s nullglob

  __format_and_mount_local_ssd
  __install_packages
  __install_jq
  __install_ruby
  __install_docker
  __install_packer
  __update_grub
  __update_ufw
}

__format_and_mount_local_ssd() {
  if [[ -f /mnt/scratch/.done ]] ; then
    return
  fi

  mkdir -p /mnt/scratch
  /usr/share/google/safe_format_and_mount \
    -m 'mkfs.ext4 -F' /dev/disk/by-id/google-local-ssd-0 /mnt/scratch
  chown -R ubuntu /mnt/scratch
  date -u > /mnt/scratch/.done
}

__install_packages() {
  if make -v &>/dev/null ; then
    return
  fi

  apt-get update -y
  apt-get install -yqq make software-properties-common
}

__install_jq() {
  if jq --version &>/dev/null ; then
    return
  fi

  curl -sSL \
    -o /usr/local/bin/jq \
    'https://github.com/stedolan/jq/releases/download/jq-1.5/jq-linux64'
  chmod +x /usr/local/bin/jq
}

__install_ruby() {
  if ruby -v &>/dev/null ; then
    return
  fi

  apt-add-repository ppa:brightbox/ruby-ng -y
  apt-get update
  apt-get install build-essential ruby2.1 libruby2.1 ruby2.1-dev -y
}

__install_docker() {
  if docker version &>/dev/null ; then
    return
  fi

  apt-key adv \
    --keyserver hkp://p80.pool.sks-keyservers.net:80 \
    --recv-keys 58118E89F3A912897C070ADBF76221572C52609D
  mkdir -p /etc/apt/sources.list.d
  echo 'deb https://apt.dockerproject.org/repo ubuntu-trusty main' > \
    /etc/apt/sources.list.d/docker.list

  apt-get update -y
  apt-cache policy docker-engine
  apt-get install -yqq linux-image-extra-$(uname -r) docker-engine

  echo 'DOCKER_OPTS="-g /mnt/scratch/docker"' >> /etc/default/docker
  restart docker

  docker run hello-world

  usermod -aG docker ubuntu
}

__install_packer() {
  apt-get update -y
  apt-get install -yqq unzip

  local packer_url='https://releases.hashicorp.com/packer/0.8.6/packer_0.8.6_linux_amd64.zip'
  local local_zip="/var/tmp/$(basename "${packer_url}")"

  mkdir -p /usr/local/bin $(dirname "${local_zip}")
  curl -sSL -o "${local_zip}" "${packer_url}"

  unzip -d /usr/local/bin -u "${local_zip}"
  chmod +x /usr/local/bin/packer*
}

__update_grub() {
  local grub_inc='/etc/default/grub.d/99-cloud-init.sh'

  if grep -qE 'GRUB_CMDLINE_LINUX.*cgroup_enable' "${grub_inc}" ; then
    return
  fi

  mkdir -p $(dirname "${grub_inc}")
  echo 'GRUB_CMDLINE_LINUX="cgroup_enable=memory swapaccount=1"' > "${grub_inc}"
  update-grub
}

__update_ufw() {
  if ! ufw status &>/dev/null ; then
    return
  fi

  if grep -qE 'DEFAULT_FORWARD_POLICY.*ACCEPT' /etc/default/ufw ; then
    return
  fi

  touch /etc/default/ufw
  sed -i '/DEFAULT_FORWARD_POLICY/d' /etc/default/ufw
  echo 'DEFAULT_FORWARD_POLICY="ACCEPT"' >> /etc/default/ufw
  ufw reload
  ufw allow 2375/tcp
}

main "$@"
